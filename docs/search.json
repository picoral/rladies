[
  {
    "objectID": "2023-09-01.html",
    "href": "2023-09-01.html",
    "title": "Reproducing Open Science Research",
    "section": "",
    "text": "This tutorial took place on September 1, 2023. Here’s the session recording."
  },
  {
    "objectID": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "href": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "title": "Reproducing Open Science Research",
    "section": "Table 1 Descriptive statistics for the perceived mental effort scale",
    "text": "Table 1 Descriptive statistics for the perceived mental effort scale\nThe standard error is calculated by dividing the standard deviation by the sample size’s square root. The standard error is most useful as a means of calculating a confidence interval. For a large sample, a 95% confidence interval is obtained as the values 1.96×SE either side of the mean (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1255808).\n\nchild_l2_data %&gt;%\n  group_by(Group) %&gt;%\n  summarize(n = n(),\n            mean_ME_1 = mean(ME_1),\n            sd_ME_1 = sd(ME_1),\n            mean_ME_2 = mean(ME_2),\n            sd_ME_2 = sd(ME_2)) %&gt;%\n  mutate(lower_ci_ME_1 = mean_ME_1 - qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         upper_ci_ME_1 = mean_ME_1 + qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         lower_ci_ME_2 = mean_ME_2 - qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n),\n         upper_ci_ME_2 = mean_ME_2 + qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGroup\nn\nmean_ME_1\nsd_ME_1\nmean_ME_2\nsd_ME_2\nlower_ci_ME_1\nupper_ci_ME_1\nlower_ci_ME_2\nupper_ci_ME_2\n\n\n\n\n1\n30\n3.833333\n1.743626\n3.433333\n1.715715\n3.182253\n4.484414\n2.792675\n4.073992\n\n\n2\n30\n5.933333\n1.910648\n5.233333\n2.358891\n5.219886\n6.646781\n4.352509\n6.114158"
  },
  {
    "objectID": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "href": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "title": "Reproducing Open Science Research",
    "section": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests",
    "text": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests\nThe way it is in the paper: group is a numeric variable\n\nmodel_1 &lt;- lm(ME_1 ~ Group, child_l2_data)\n\nlibrary(effects)\neffect(\"Group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\nGroup\nfit\nse\nlower\nupper\n\n\n\n\n1.0\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n1.2\n4.253333\n0.2753709\n3.702119\n4.804548\n\n\n1.5\n4.883333\n0.2361286\n4.410671\n5.355996\n\n\n1.8\n5.513333\n0.2753709\n4.962119\n6.064548\n\n\n2.0\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\n\n\n# linear regression (recreation of table 4 on page 200)\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          44.0133    11.1696   3.940 0.000224 ***\nOral_Production_Pre   1.3947     0.4662   2.991 0.004099 ** \nGroup               -15.9727     6.9541  -2.297 0.025320 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"Group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = Group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))\n\n\n\n\nThe correct way: group is a categorical (factor) variable\n\nchild_l2_data &lt;- child_l2_data %&gt;%\n  mutate(group = factor(Group))\n\nmodel_1 &lt;- lm(ME_1 ~ group, child_l2_data)\n\neffect(\"group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\ngroup\nfit\nse\nlower\nupper\n\n\n\n\n1\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n2\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          28.0406     5.2577   5.333 1.72e-06 ***\nOral_Production_Pre   1.3947     0.4662   2.991   0.0041 ** \ngroup2              -15.9727     6.9541  -2.297   0.0253 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))"
  },
  {
    "objectID": "2023-09-01.html#visualizations-by-group",
    "href": "2023-09-01.html#visualizations-by-group",
    "title": "Reproducing Open Science Research",
    "section": "Visualizations by Group",
    "text": "Visualizations by Group\nOral production mean by group. We need to transform the data first, to have pre and post tests as values in a variable.\n\noral_production &lt;- child_l2_data %&gt;% \n  select(Participant, Group, Oral_Production_Pre, Oral_Production_Post) %&gt;% \n  pivot_longer(cols = c(Oral_Production_Pre, Oral_Production_Post)) %&gt;% \n  mutate(group = factor(Group),\n         name = factor(name,\n                       levels = c(\"Oral_Production_Pre\",\n                                  \"Oral_Production_Post\")))\n\nWe can now create a boxplot by group and type of test.\n\noral_production %&gt;% \n  ggplot(aes(x = group,\n             y = value,\n             color = name)) +\n  geom_boxplot()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-Ladies Tucson",
    "section": "",
    "text": "Tutorials\n\nSeptember 1, 2023: Reproducing Open Science Research"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "R-Ladies Tucson AZ is part of a worldwide organization to promote Gender Diversity in the R statistical computing community. The mission of R-Ladies groups is to increase representation of women in global R community through establishing local communities providing mentorship, collaborative learning & support. Anyone with an interest in R is encouraged to participate. It doesn’t matter if you never used R or if you are an R expert. Come and join us!"
  }
]