[
  {
    "objectID": "2023-09-15.html",
    "href": "2023-09-15.html",
    "title": "Reproducing Open Science Research 2",
    "section": "",
    "text": "September 15, 10am to 11am.\nFor this tutorial, we will be replicating some of the analysis in Palma, P., Marin, M. F., Onishi, K. H., & Titone, D. (2022). Learning, inside and out: Prior linguistic knowledge and learning environment impact word learning in bilingual individuals. Language Learning, 72(4), 980-1016. Paper can be found at https://onlinelibrary.wiley.com/doi/abs/10.1111/lang.12501\nData, code, and more information can be found at https://osf.io/69seu/"
  },
  {
    "objectID": "2023-09-15.html#descriptive-visualization-before-running-stats",
    "href": "2023-09-15.html#descriptive-visualization-before-running-stats",
    "title": "Reproducing Open Science Research 2",
    "section": "Descriptive visualization (before running stats)",
    "text": "Descriptive visualization (before running stats)\n\nWe hypothesized, first, that episodic memory for novel words may decrease over time.\n\n\nThe interval between experimental Day 1 and Day 2 was either 24 hours or 1 week.\n\n\ndata %&gt;% \n  group_by(Experiment, FC) %&gt;%\n  summarize(mean_acc = mean(ACC)) %&gt;% \n  mutate(diff = diff(mean_acc)) %&gt;% \n  ggplot(aes(x = FC,\n             y = mean_acc)) +\n  geom_line(aes(group = 1)) +\n  geom_label(aes(label = round(mean_acc, 2))) +\n  facet_wrap(~Experiment) +\n  labs(caption = \"procedure chart on page 990\")\n\n`summarise()` has grouped output by 'Experiment'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\nResults from a model\nLet’s run a model with the effect of the interaction of Experiment and FC.\n\nmodel_experiment &lt;- glm(ACC ~ Experiment:FC,\n                        data = data,\n                        family = binomial)\n\nsummary(model_experiment)\n\n\nCall:\nglm(formula = ACC ~ Experiment:FC, family = binomial, data = data)\n\nCoefficients: (1 not defined because of singularities)\n                       Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)             0.59784    0.08394   7.122 1.06e-12 ***\nExperimentday1-2:FCFC1  0.89609    0.13482   6.646 3.00e-11 ***\nExperimentday1-8:FCFC1  0.57725    0.12535   4.605 4.12e-06 ***\nExperimentday1-2:FCFC2  0.55484    0.12721   4.362 1.29e-05 ***\nExperimentday1-8:FCFC2       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2788.4  on 2459  degrees of freedom\nResidual deviance: 2738.8  on 2456  degrees of freedom\nAIC: 2746.8\n\nNumber of Fisher Scoring iterations: 4\n\n\nThe variance explained for this model is very low:\n\n# McFadden's R-squared for model\nwith(summary(model_experiment), 1 - deviance/null.deviance)\n\n[1] 0.01780274\n\n\nLet’s look at the effects:\n\nlibrary(effects)\n\nLoading required package: carData\n\n\nlattice theme set by effectsTheme()\nSee ?effectsTheme for details.\n\neffect(\"Experiment:FC\", model_experiment) %&gt;% \n  data.frame() %&gt;% \n   ggplot(aes(x = FC,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_line(aes(group = 1)) +\n  geom_errorbar() +\n  geom_label(aes(label = round(fit, 2))) +\n  facet_wrap(~Experiment)"
  },
  {
    "objectID": "2023-09-15.html#descriptive-visualization-before-running-stats-1",
    "href": "2023-09-15.html#descriptive-visualization-before-running-stats-1",
    "title": "Reproducing Open Science Research 2",
    "section": "Descriptive visualization (before running stats)",
    "text": "Descriptive visualization (before running stats)\n\nSecond, we hypothesized that, to the extent that neighborhood density in the learning environment impacts episodic memory, learning many novel neighbors for an existing word may lead to decreased episodic memory for these novel neighbors\n\n\ns1: one neighbor for List B base words (one-neighbor condition) and five neighbors for List C base words (five-neighbors condition). No neighbors were presented for List A base words (zero-neighbors condition).\ns2: one neighbor for List C and five for List A, whereas no neighbors were presented for List B base words.\ns3: one neighbor for List A and five for List B, whereas no neighbors were presented for List C base words.\n\nStimuli have either 1 or 5 neighbors:\n\ndata %&gt;% count(nb_neighbors)\n\n\n\n\n\nnb_neighbors\nn\n\n\n\n\n1\n1240\n\n\n5\n1220\n\n\n\n\n\n\n\ndata %&gt;% \n  group_by(FC, Experiment, nb_neighbors) %&gt;%\n  mutate(nb_neighbors = factor(nb_neighbors)) %&gt;% \n  summarize(mean_acc = mean(ACC)) %&gt;% \n  ggplot(aes(x = FC,\n             y = mean_acc,\n             color = nb_neighbors)) +\n  geom_line(aes(group = nb_neighbors)) +\n  geom_label(aes(label = round(mean_acc, 2))) +\n  facet_wrap(~Experiment) +\n  labs(caption = \"procedure chart on page 990\")\n\n`summarise()` has grouped output by 'FC', 'Experiment'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\ndata %&gt;% \n  group_by(FC, Experiment, Training_group) %&gt;%\n  summarize(mean_acc = mean(ACC)) %&gt;% \n  ggplot(aes(x = FC,\n             y = mean_acc,\n             color = Training_group)) +\n  geom_line(aes(group = Training_group)) +\n  geom_label(aes(label = round(mean_acc, 2))) +\n  facet_wrap(~Experiment) +\n  labs(caption = \"procedure chart on page 990\")\n\n`summarise()` has grouped output by 'FC', 'Experiment'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\nFinally, we hypothesized that, to the extent that cross-linguistic similarity impacts episodic memory, novel neighbors to words that overlap across languages may be easier to recognize."
  },
  {
    "objectID": "2023-09-29.html",
    "href": "2023-09-29.html",
    "title": "Reproducing Open Science Research 3",
    "section": "",
    "text": "October 06, 10am to 11am. Register\nFor this tutorial, we will be replicating some of the analysis in Chappell, W. & Kanwit, M. (2021). Do Learners Connect Sociophonetic Variation with Regional and Social Characteristics? The Case of L2 Perception of Spanish Aspiration. Studies in Second Language Acquisition. 44(1). 1–25.\nData can be found at https://www.iris-database.org/details/MQbI5-rz7z3"
  },
  {
    "objectID": "2023-09-29.html#participants",
    "href": "2023-09-29.html#participants",
    "title": "Reproducing Open Science Research 3",
    "section": "Participants",
    "text": "Participants\n\nSeventy-six language learners\n\nWe have multiple observations per participants, so to get to number of participants we need to use distinct()\n\nl2_span_perception %&gt;% \n  distinct(Participant) %&gt;% \n  nrow()\n\n[1] 76\n\n\nTable 1 recreation (page 193):\n\nl2_span_perception %&gt;% \n  distinct(Participant, Gender) %&gt;% \n  count(Gender)\n\n\n\n\n\nGender\nn\n\n\n\n\nFemale\n55\n\n\nMale\n21\n\n\n\n\n\n\n\nl2_span_perception %&gt;% \n  distinct(Participant, Age) %&gt;% \n  summarize(min_age = min(Age),\n            max_age = max(Age),\n            mean_age = mean(Age),\n            median_age = median(Age))\n\n\n\n\n\nmin_age\nmax_age\nmean_age\nmedian_age\n\n\n\n\n18\n57\n23.64474\n21\n\n\n\n\n\n\n\nl2_span_perception %&gt;% \n  distinct(Participant, Education) %&gt;% \n  count(Education, sort = TRUE)\n\n\n\n\n\nEducation\nn\n\n\n\n\nSome college\n43\n\n\nCollege graduate\n27\n\n\nHigh school\n5\n\n\nSome high school\n1"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-Ladies Tucson",
    "section": "",
    "text": "Live Tutorials\n\nOctober 6, 2023: Reproducing Open Science Research 3\nSeptember 15, 2023: Reproducing Open Science Research 2\nSeptember 1, 2023: Reproducing Open Science Research 1\n\n\n\nRecorded Lessons\n\nReading and checking data in R"
  },
  {
    "objectID": "lesson-02.html",
    "href": "lesson-02.html",
    "title": "Reading multiple files in R",
    "section": "",
    "text": "For this tutorial on how to read data in R, we will be using bilingual children production from the (Corpus of bilingual children’s speech on kaggle)[https://www.kaggle.com/datasets/rtatman/corpus-of-bilingual-childrens-speech]"
  },
  {
    "objectID": "lesson-01.html",
    "href": "lesson-01.html",
    "title": "Reading and checking data",
    "section": "",
    "text": "For this tutorial on how to read data in R, we will be using the data available as complementary material for Tagliamonte’s (2011) Variationist Sociolinguistics: Change, Observation, Interpretation textbook.\nThis tutorial will be using posit.cloud for our IDE (Integrated Development Environment). You can create a free account to follow along.\n\nVideo demonstrations\n\n\n\n\nGetting started\nWe’ll be using two packages for this tutorial. RStudio should prompt you to install these once you save your .Rmd file.\n\nlibrary(tidyverse)\nlibrary(readxl)\n\nWe can now read our data in (remember to download the data from the website, and place it in a data folder in your project).\n\nthat_data &lt;- read_excel(\"data/data_set.xlsx\")\n\n\n\nHow many observations per participant?\nOnce you read your data, you should check to see if all your values are in the data. We can use count() for that.\n\nthat_data %&gt;% \n  count(Indiv, sort = TRUE)\n\n\n\n  \n\n\n\n\n\nChecking values of categorical variables\nWhen coding data, humans often make mistakes (misspell category names, for example). We can count how many of each dependent variable we have in our data using count() again.\n\nthat_data %&gt;% \n  count(Dep.var)\n\n\n\n  \n\n\n\nLet’s do the same with verbs.\n\nthat_data %&gt;% \n  count(Verbs.1)\n\n\n\n  \n\n\n\nThis data is of course very clean. I’ve changed the original data, to insert an error in one of the value names. We will read in that data, check the values, and make the changes to fix it.\nWe read the data in.\n\ncorrupt_data &lt;- read_excel(\"data/data_set_corrupt.xlsx\")\n\nThen we count the verbs. Notice the other value with one occurrence in our data.\n\ncorrupt_data %&gt;% \n  count(Verbs.1)\n\n\n\n  \n\n\n\nWe can certainly fix that in our original data file. But here’s how to fix it in R:\n\ncorrupt_data &lt;- corrupt_data %&gt;% \n  mutate(Verbs.1.fixed = case_when(Verbs.1 == \"other\" ~ \"OTHER\",\n                                   TRUE ~ Verbs.1))\n\nLet’s check our verbs again.\n\ncorrupt_data %&gt;% \n  count(Verbs.1.fixed)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "R-Ladies Tucson AZ is part of a worldwide organization to promote Gender Diversity in the R statistical computing community. The mission of R-Ladies groups is to increase representation of women in global R community through establishing local communities providing mentorship, collaborative learning & support. Anyone with an interest in R is encouraged to participate. It doesn’t matter if you never used R or if you are an R expert. Come and join us!"
  },
  {
    "objectID": "2023-09-01.html",
    "href": "2023-09-01.html",
    "title": "Reproducing Open Science Research 1",
    "section": "",
    "text": "This tutorial took place on September 1, 2023. Here’s the session recording."
  },
  {
    "objectID": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "href": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "title": "Reproducing Open Science Research 1",
    "section": "Table 1 Descriptive statistics for the perceived mental effort scale",
    "text": "Table 1 Descriptive statistics for the perceived mental effort scale\nThe standard error is calculated by dividing the standard deviation by the sample size’s square root. The standard error is most useful as a means of calculating a confidence interval. For a large sample, a 95% confidence interval is obtained as the values 1.96×SE either side of the mean (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1255808).\n\nchild_l2_data %&gt;%\n  group_by(Group) %&gt;%\n  summarize(n = n(),\n            mean_ME_1 = mean(ME_1),\n            sd_ME_1 = sd(ME_1),\n            mean_ME_2 = mean(ME_2),\n            sd_ME_2 = sd(ME_2)) %&gt;%\n  mutate(lower_ci_ME_1 = mean_ME_1 - qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         upper_ci_ME_1 = mean_ME_1 + qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         lower_ci_ME_2 = mean_ME_2 - qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n),\n         upper_ci_ME_2 = mean_ME_2 + qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGroup\nn\nmean_ME_1\nsd_ME_1\nmean_ME_2\nsd_ME_2\nlower_ci_ME_1\nupper_ci_ME_1\nlower_ci_ME_2\nupper_ci_ME_2\n\n\n\n\n1\n30\n3.833333\n1.743626\n3.433333\n1.715715\n3.182253\n4.484414\n2.792675\n4.073992\n\n\n2\n30\n5.933333\n1.910648\n5.233333\n2.358891\n5.219886\n6.646781\n4.352509\n6.114158"
  },
  {
    "objectID": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "href": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "title": "Reproducing Open Science Research 1",
    "section": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests",
    "text": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests\nThe way it is in the paper: group is a numeric variable\n\nmodel_1 &lt;- lm(ME_1 ~ Group, child_l2_data)\n\nlibrary(effects)\neffect(\"Group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\nGroup\nfit\nse\nlower\nupper\n\n\n\n\n1.0\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n1.2\n4.253333\n0.2753709\n3.702119\n4.804548\n\n\n1.5\n4.883333\n0.2361286\n4.410671\n5.355996\n\n\n1.8\n5.513333\n0.2753709\n4.962119\n6.064548\n\n\n2.0\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\n\n\n# linear regression (recreation of table 4 on page 200)\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          44.0133    11.1696   3.940 0.000224 ***\nOral_Production_Pre   1.3947     0.4662   2.991 0.004099 ** \nGroup               -15.9727     6.9541  -2.297 0.025320 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"Group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = Group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))\n\n\n\n\nThe correct way: group is a categorical (factor) variable\n\nchild_l2_data &lt;- child_l2_data %&gt;%\n  mutate(group = factor(Group))\n\nmodel_1 &lt;- lm(ME_1 ~ group, child_l2_data)\n\neffect(\"group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\ngroup\nfit\nse\nlower\nupper\n\n\n\n\n1\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n2\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          28.0406     5.2577   5.333 1.72e-06 ***\nOral_Production_Pre   1.3947     0.4662   2.991   0.0041 ** \ngroup2              -15.9727     6.9541  -2.297   0.0253 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))"
  },
  {
    "objectID": "2023-09-01.html#visualizations-by-group",
    "href": "2023-09-01.html#visualizations-by-group",
    "title": "Reproducing Open Science Research 1",
    "section": "Visualizations by Group",
    "text": "Visualizations by Group\nOral production mean by group. We need to transform the data first, to have pre and post tests as values in a variable.\n\noral_production &lt;- child_l2_data %&gt;% \n  select(Participant, Group, Oral_Production_Pre, Oral_Production_Post) %&gt;% \n  pivot_longer(cols = c(Oral_Production_Pre, Oral_Production_Post)) %&gt;% \n  mutate(group = factor(Group),\n         name = factor(name,\n                       levels = c(\"Oral_Production_Pre\",\n                                  \"Oral_Production_Post\")))\n\nWe can now create a boxplot by group and type of test.\n\noral_production %&gt;% \n  ggplot(aes(x = group,\n             y = value,\n             color = name)) +\n  geom_boxplot()"
  }
]