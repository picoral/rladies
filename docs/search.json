[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "R-Ladies Tucson AZ is part of a worldwide organization to promote Gender Diversity in the R statistical computing community. The mission of R-Ladies groups is to increase representation of women in global R community through establishing local communities providing mentorship, collaborative learning & support. Anyone with an interest in R is encouraged to participate. It doesn’t matter if you never used R or if you are an R expert. Come and join us!"
  },
  {
    "objectID": "2023-09-01.html",
    "href": "2023-09-01.html",
    "title": "September 1, 2023",
    "section": "",
    "text": "For this tutorial, we will be reproduction the data analysis at an Open Science repository. We are going to be using data from the [IRIS database](https://www.iris-database.org/details/8Inx1-lXnb6.\nHere’s an excerpt of the study’s abstract:\n\nThis study investigated the effects of task complexity on child learners’ second language (L2) gains, the relationship between aptitude and L2 development, and the extent to which task complexity influences this relationship when recasts are provided. Sixty child EFL learners were assigned to two experimental groups. During the treatment, one group completed simple information transmission tasks, whereas the other group performed complex decision-making tasks. In response to errors in the use of the present third person singular verb forms, participants received recasts. L2 development was measured through oral production, written production, and elicited imitation tests. Aptitude was assessed through LLAMA D, LLAMA E, and LLAMA F.\n\nOur first step it to load the tidyverse library (RStudio will prompt you to install it).\n\n# load library for data analysis\nlibrary(tidyverse)\n\nDownload the data and add it to your project inside a folder called data.\nNow we read the data in:\n\n# read data in\nchild_l2_data &lt;- read_csv(\"data/Data_Kourtali_Revesz.csv\")\n\nIt’s always a good idea to inspect the data to make sure everything looks good.\n\nglimpse(child_l2_data)\n\nRows: 60\nColumns: 61\n$ Participant                   &lt;dbl&gt; 1, 3, 11, 12, 15, 25, 26, 32, 40, 41, 43…\n$ Time                          &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Group                         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Duration_English              &lt;dbl&gt; 6.0, 5.0, 4.0, 5.0, 4.0, 4.0, 6.0, 7.0, …\n$ Listening                     &lt;dbl&gt; 6, 10, 5, 5, 3, 5, 7, 10, 6, 9, 10, 7, 9…\n$ Oral_Production_Pre           &lt;dbl&gt; 26.31, 18.75, 0.00, 0.00, 0.00, 0.00, 0.…\n$ Written_Production_Pre        &lt;dbl&gt; 0.00, 9.09, 0.00, 0.00, 0.00, 0.00, 8.33…\n$ Oral_Production_Post          &lt;dbl&gt; 26.66, 28.57, 0.00, 0.00, 0.00, 53.33, 3…\n$ Written_Production_Post       &lt;dbl&gt; 61.53, 75.00, 0.00, 58.33, 0.00, 100.00,…\n$ EI                            &lt;dbl&gt; 29.16, 29.10, 0.00, 12.50, 0.00, 4.16, 4…\n$ EI_GRAM                       &lt;dbl&gt; 41.66, 50.00, 0.00, 25.00, 0.00, 8.33, 8…\n$ EI_UNGRAM                     &lt;dbl&gt; 16.66, 8.33, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ LLAMA_D                       &lt;dbl&gt; 45, 10, 20, 15, 30, 25, 25, 35, 35, 35, …\n$ LLAMA_E                       &lt;dbl&gt; 50, 0, 0, 40, 60, 0, 40, 90, 10, 30, 70,…\n$ LLAMA_F                       &lt;dbl&gt; 0, 40, 20, 10, 0, 40, 50, 10, 30, 20, 0,…\n$ Recasts_T1                    &lt;dbl&gt; 11, 10, 12, 16, 15, 3, 8, 9, 9, 12, 6, 9…\n$ SU_T1_Number                  &lt;dbl&gt; 7, 8, 0, 0, 1, 1, 0, 7, 3, 3, 3, 1, 0, 6…\n$ SU_T1_Percentage              &lt;dbl&gt; 63.63, 80.00, 0.00, 0.00, 6.66, 33.33, 0…\n$ OC_T1_OVERALL                 &lt;dbl&gt; 19, 15, 13, 22, 15, 13, 15, 25, 13, 12, …\n$ OC_T1                         &lt;dbl&gt; 18, 15, 13, 19, 15, 13, 15, 25, 13, 12, …\n$ Recasts_T1_Percentage         &lt;dbl&gt; 61.11, 66.66, 92.30, 84.21, 100.00, 23.0…\n$ CP_T1_Number                  &lt;dbl&gt; 6, 5, 1, 0, 0, 10, 7, 16, 4, 0, 7, 5, 9,…\n$ CP_T1_Percentage              &lt;dbl&gt; 31.57, 33.33, 7.69, 0.00, 0.00, 76.92, 4…\n$ Recasts_T2                    &lt;dbl&gt; 4, 9, 12, 10, 15, 3, 4, 1, 7, 8, 0, 6, 0…\n$ SU_T2_Number                  &lt;dbl&gt; 4, 6, 2, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 3…\n$ SU_T2_Percentage              &lt;dbl&gt; 100.00, 66.66, 16.66, 0.00, 0.00, 0.00, …\n$ OC_T2_OVERALL                 &lt;dbl&gt; 21, 14, 14, 19, 15, 14, 15, 22, 15, 14, …\n$ OC_T2                         &lt;dbl&gt; 20, 14, 14, 18, 15, 14, 15, 22, 15, 14, …\n$ Recasts_T2_percentage         &lt;dbl&gt; 20.00, 64.28, 85.71, 55.55, 100.00, 21.4…\n$ CP_T2_Number                  &lt;dbl&gt; 15, 5, 2, 7, 0, 11, 11, 21, 8, 6, 13, 10…\n$ CP_T2_Percentage              &lt;dbl&gt; 71.42, 35.71, 14.28, 36.84, 0.00, 78.57,…\n$ ME_1                          &lt;dbl&gt; 2, 2, 5, 3, 2, 2, 1, 3, 6, 2, 3, 5, 5, 8…\n$ ME_2                          &lt;dbl&gt; 2, 2, 5, 3, 3, 3, 1, 2, 2, 2, 2, 2, 5, 8…\n$ Overall_Dif_T1                &lt;dbl&gt; 1, 2, 5, 3, 6, 1, 1, 1, 4, 1, 3, 1, 5, 1…\n$ Overall_Dif_T2                &lt;dbl&gt; 1, 2, 4, 2, 6, 3, 1, 2, 4, 1, 2, 1, 4, 1…\n$ Ling_Dif_T1                   &lt;dbl&gt; 1, 2, 6, 2, 3, 2, 1, 2, 4, 3, 2, 2, 4, 1…\n$ Ling_Dif_T2                   &lt;dbl&gt; 1, 2, 6, 3, 4, 2, 1, 2, 3, 3, 2, 1, 4, 1…\n$ Perceiv_Perf_T1               &lt;dbl&gt; 2, 3, 5, 3, 8, 7, 1, 4, 5, 2, 3, 3, 5, 2…\n$ Perceiv_Perf_T2               &lt;dbl&gt; 1, 3, 5, 3, 7, 6, 1, 3, 5, 3, 2, 2, 5, 1…\n$ Recasts_Number_total          &lt;dbl&gt; 15, 19, 24, 26, 30, 6, 12, 10, 16, 20, 6…\n$ SU_Number_total               &lt;dbl&gt; 11, 14, 2, 0, 1, 1, 0, 8, 10, 3, 3, 1, 0…\n$ SU_Percentage_total           &lt;dbl&gt; 73.33, 73.68, 8.33, 0.00, 3.33, 16.67, 0…\n$ OC_TOTAL                      &lt;dbl&gt; 38, 29, 27, 37, 30, 27, 30, 47, 28, 26, …\n$ Elicited_Imitation_Total_Pre  &lt;dbl&gt; 7, 7, 0, 3, 0, 1, 1, 4, 3, 4, 11, 5, 3, …\n$ Elicited_Imitation_Gr_Pre     &lt;dbl&gt; 5, 6, 0, 3, 0, 1, 1, 3, 1, 3, 11, 5, 3, …\n$ Elicited_Imitation_Ungr_Pre   &lt;dbl&gt; 2, 1, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 5…\n$ Elicited_Imitation_Total_Post &lt;dbl&gt; 5, 10, 0, 8, 1, 0, 3, 17, 9, 7, 11, 14, …\n$ Elicited_Imitation_Gr_Post    &lt;dbl&gt; 4, 10, 0, 6, 1, 0, 2, 9, 5, 7, 10, 10, 6…\n$ Elicited_Imitation_Ungr_Post  &lt;dbl&gt; 1, 0, 0, 2, 0, 0, 1, 8, 4, 0, 1, 4, 0, 1…\n$ Gain_oral                     &lt;dbl&gt; 0.35, 9.82, 0.00, 0.00, 0.00, 53.33, 30.…\n$ Gain_written                  &lt;dbl&gt; 61.53, 65.91, 0.00, 58.33, 0.00, 100.00,…\n$ Gain_EI                       &lt;dbl&gt; -2, 3, 0, 5, 1, -1, 2, 13, 6, 3, 0, 9, 3…\n$ Gain_EI_Gr                    &lt;dbl&gt; -1, 4, 0, 3, 1, -1, 1, 6, 4, 4, -1, 5, 3…\n$ Gain_EI_Ungr                  &lt;dbl&gt; -1, -1, 0, 2, 0, 0, 1, 7, 2, -1, 1, 4, 0…\n$ CP_both_tasks                 &lt;dbl&gt; 21, 10, 3, 7, 0, 21, 18, 37, 12, 6, 20, …\n$ ZRE_1                         &lt;dbl&gt; 2.94, 1.95, -0.53, -0.53, -0.53, -0.53, …\n$ ZRE_2                         &lt;dbl&gt; -0.24, -0.18, -1.17, -1.17, -1.17, 0.69,…\n$ OralProPre_log                &lt;dbl&gt; 3.27, 2.93, 0.00, 0.00, 0.00, 0.00, 0.00…\n$ OralProPost_log               &lt;dbl&gt; 3.28, 3.35, 0.00, 0.00, 0.00, 3.98, 3.43…\n$ ZRE_3                         &lt;dbl&gt; 2.22, 1.93, -0.58, -0.58, -0.58, -0.58, …\n$ ZRE_4                         &lt;dbl&gt; 0.42, 0.46, -1.39, -1.39, -1.39, 0.81, 0…"
  },
  {
    "objectID": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "href": "2023-09-01.html#table-1-descriptive-statistics-for-the-perceived-mental-effort-scale",
    "title": "September 1, 2023",
    "section": "Table 1 Descriptive statistics for the perceived mental effort scale",
    "text": "Table 1 Descriptive statistics for the perceived mental effort scale\nThe standard error is calculated by dividing the standard deviation by the sample size’s square root. The standard error is most useful as a means of calculating a confidence interval. For a large sample, a 95% confidence interval is obtained as the values 1.96×SE either side of the mean (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1255808).\n\nchild_l2_data %&gt;%\n  group_by(Group) %&gt;%\n  summarize(n = n(),\n            mean_ME_1 = mean(ME_1),\n            sd_ME_1 = sd(ME_1),\n            mean_ME_2 = mean(ME_2),\n            sd_ME_2 = sd(ME_2)) %&gt;%\n  mutate(lower_ci_ME_1 = mean_ME_1 - qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         upper_ci_ME_1 = mean_ME_1 + qt(1 - (.05 / 2), n - 1) * sd_ME_1/sqrt(n),\n         lower_ci_ME_2 = mean_ME_2 - qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n),\n         upper_ci_ME_2 = mean_ME_2 + qt(1 - (.05 / 2), n - 1) * sd_ME_2/sqrt(n))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGroup\nn\nmean_ME_1\nsd_ME_1\nmean_ME_2\nsd_ME_2\nlower_ci_ME_1\nupper_ci_ME_1\nlower_ci_ME_2\nupper_ci_ME_2\n\n\n\n\n1\n30\n3.833333\n1.743626\n3.433333\n1.715715\n3.182253\n4.484414\n2.792675\n4.073992\n\n\n2\n30\n5.933333\n1.910648\n5.233333\n2.358891\n5.219886\n6.646781\n4.352509\n6.114158"
  },
  {
    "objectID": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complex--ity-on-the-oral-and-written-production-tests",
    "href": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complex--ity-on-the-oral-and-written-production-tests",
    "title": "September 1, 2023",
    "section": "Table 4 Results for the linear regression models examining the effects of task complex- ity on the oral and written production tests",
    "text": "Table 4 Results for the linear regression models examining the effects of task complex- ity on the oral and written production tests\nThe way it is in the paper: group is a numeric variable\n\nmodel_1 &lt;- lm(ME_1 ~ Group, child_l2_data)\n\nlibrary(effects)\neffect(\"Group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\nGroup\nfit\nse\nlower\nupper\n\n\n\n\n1.0\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n1.2\n4.253333\n0.2753709\n3.702119\n4.804548\n\n\n1.5\n4.883333\n0.2361286\n4.410671\n5.355996\n\n\n1.8\n5.513333\n0.2753709\n4.962119\n6.064548\n\n\n2.0\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\n\n\n# linear regression (recreation of table 4 on page 200)\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          44.0133    11.1696   3.940 0.000224 ***\nOral_Production_Pre   1.3947     0.4662   2.991 0.004099 ** \nGroup               -15.9727     6.9541  -2.297 0.025320 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"Group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = Group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))\n\n\n\n\nThe correct way: group is a categorical (factor) variable\n\nchild_l2_data &lt;- child_l2_data %&gt;%\n  mutate(group = factor(Group))\n\nmodel_1 &lt;- lm(ME_1 ~ group, child_l2_data)\n\neffect(\"group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\ngroup\nfit\nse\nlower\nupper\n\n\n\n\n1\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n2\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          28.0406     5.2577   5.333 1.72e-06 ***\nOral_Production_Pre   1.3947     0.4662   2.991   0.0041 ** \ngroup2              -15.9727     6.9541  -2.297   0.0253 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))"
  },
  {
    "objectID": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "href": "2023-09-01.html#table-4-results-for-the-linear-regression-models-examining-the-effects-of-task-complexity-on-the-oral-and-written-production-tests",
    "title": "September 1, 2023",
    "section": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests",
    "text": "Table 4 Results for the linear regression models examining the effects of task complexity on the oral and written production tests\nThe way it is in the paper: group is a numeric variable\n\nmodel_1 &lt;- lm(ME_1 ~ Group, child_l2_data)\n\nlibrary(effects)\neffect(\"Group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\nGroup\nfit\nse\nlower\nupper\n\n\n\n\n1.0\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n1.2\n4.253333\n0.2753709\n3.702119\n4.804548\n\n\n1.5\n4.883333\n0.2361286\n4.410671\n5.355996\n\n\n1.8\n5.513333\n0.2753709\n4.962119\n6.064548\n\n\n2.0\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\n\n\n# linear regression (recreation of table 4 on page 200)\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + Group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          44.0133    11.1696   3.940 0.000224 ***\nOral_Production_Pre   1.3947     0.4662   2.991 0.004099 ** \nGroup               -15.9727     6.9541  -2.297 0.025320 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"Group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = Group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))\n\n\n\n\nThe correct way: group is a categorical (factor) variable\n\nchild_l2_data &lt;- child_l2_data %&gt;%\n  mutate(group = factor(Group))\n\nmodel_1 &lt;- lm(ME_1 ~ group, child_l2_data)\n\neffect(\"group\", model_1) %&gt;%\n  data.frame()\n\n\n\n\n\ngroup\nfit\nse\nlower\nupper\n\n\n\n\n1\n3.833333\n0.3339362\n3.164887\n4.501779\n\n\n2\n5.933333\n0.3339362\n5.264887\n6.601779\n\n\n\n\n\nmodel_table_4 &lt;- child_l2_data %&gt;%\n  lm(formula = Oral_Production_Post ~ Oral_Production_Pre + group)\n\nsummary(model_table_4)\n\n\nCall:\nlm(formula = Oral_Production_Post ~ Oral_Production_Pre + group, \n    data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.942 -21.363  -4.573  21.869  66.482 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          28.0406     5.2577   5.333 1.72e-06 ***\nOral_Production_Pre   1.3947     0.4662   2.991   0.0041 ** \ngroup2              -15.9727     6.9541  -2.297   0.0253 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.93 on 57 degrees of freedom\nMultiple R-squared:  0.2022,    Adjusted R-squared:  0.1742 \nF-statistic: 7.222 on 2 and 57 DF,  p-value: 0.001601\n\neffect(\"group\", model_table_4) %&gt;%\n  data.frame() %&gt;%\n  ggplot(aes(x = group,\n             y = fit,\n             ymin = lower,\n             ymax = upper)) +\n  geom_errorbar() +\n  geom_label(aes(label = format(fit, digits = 2)))"
  },
  {
    "objectID": "2023-09-01.html#visualizations-by-group",
    "href": "2023-09-01.html#visualizations-by-group",
    "title": "September 1, 2023",
    "section": "Visualizations by Group",
    "text": "Visualizations by Group\nOral production mean by group. We need to transform the data first, to have pre and post tests as values in a variable.\n\noral_production &lt;- child_l2_data %&gt;% \n  select(Participant, Group, Oral_Production_Pre, Oral_Production_Post) %&gt;% \n  pivot_longer(cols = c(Oral_Production_Pre, Oral_Production_Post)) %&gt;% \n  mutate(group = factor(Group),\n         name = factor(name,\n                       levels = c(\"Oral_Production_Pre\",\n                                  \"Oral_Production_Post\")))\n\nWe can now create a boxplot by group and type of test.\n\noral_production %&gt;% \n  ggplot(aes(x = group,\n             y = value,\n             color = name)) +\n  geom_boxplot()"
  }
]